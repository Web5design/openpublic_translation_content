<?php
/**
 * @file
 * Code for the OpenPublic Translation Content feature.
 */

include_once('openpublic_translation_content.features.inc');


/**
 * Implementation of hook_views_pre_view().
 *
 * Add in a language filter for the current language.
 */
function openpublic_translation_content_views_pre_view(&$view, $display_id) {
  //do not add the filter for views that are to be excluded
  $views_excluded = variable_get('openpublic_translation_content_excluded_views', array());
  if (($view->base_table == 'node') && 
      !(isset($views_excluded[$view->name]) && $views_excluded[$view->name]) ) {
    $view->display['default']->handler->options['filters']['language']['id'] = 'language';
    $view->display['default']->handler->options['filters']['language']['table'] = 'node';
    $view->display['default']->handler->options['filters']['language']['field'] = 'language';
    $view->display['default']->handler->options['filters']['language']['value'] = array(
      '***CURRENT_LANGUAGE***' => '***CURRENT_LANGUAGE***',
    );
    $view->display[$display_id]->handler->options['filters']['language']['id'] = 'language';
    $view->display[$display_id]->handler->options['filters']['language']['table'] = 'node';
    $view->display[$display_id]->handler->options['filters']['language']['field'] = 'language';
    $view->display[$display_id]->handler->options['filters']['language']['value'] = array(
      '***CURRENT_LANGUAGE***' => '***CURRENT_LANGUAGE***',
    );
  }
}


/**
 * Implements hook_requirements_api()
 *
 * Let openpublic know if we have more then one language setup
 */
function openpublic_translation_content_requirements_api() {
  $langs = array();
  foreach(language_list() as $code => $lang) {
    $langs[$code] = $lang->name;
  }
  $lang_last = array_pop($langs);
  $langs_string = empty($trans) ? $lang_last :
    implode(" and ", array(implode(', ', $langs), $lang_last));
  $tran = array(
    'title'=> t('OpenPublic Translation content'),
    'description' => t('For Openpublic Translation Cotent to have an effect there must be more then one language configured. This can be done on the !language_config_link.', array('!language_config_link'=> l('Language Configuration Page', 'admin/config/regional/language'))),
    'value' => $langs_string,
  );
  if(empty($langs)) {
    $tran['severity'] = REQUIREMENT_ERROR;
    $tran['value'] = t("Only One language");
  }
  else {
    $tran['severity'] = REQUIREMENT_OK;
  }
  return array("openpublic_translation_content", $tran);
  

}

/**
 * implements hook_menu()
 */
function openpublic_translation_content_menu() {
  return array(
    'admin/config/regional/convert-und' => array(
      'page callback' => 'openpublic_translation_content_convert_und',
      'access arguments' => array('administer languages'),
      'type' => MENU_CALLBACK,
    ),
  );

}
/**
 * page call back for admin/config/regional/convert-und
 *
 * Convert all und to the current language and then return 
 */
function openpublic_translation_content_convert_und() {
  global $language;
  $num_updated = db_update('node') // Table name no longer needs {}
   ->fields(array(
      'language' => $language->language,
     // 'language' => 'und',
   ))
   ->condition('language', 'und')
   ->execute();
   drupal_set_message("hi");
  drupal_set_message(t("Converted @count Content Items from Undefined to @language.", array("@count"=> $num_updated, "@language" => $language->name)));
  drupal_goto();
  return "";
}

function openpublic_translation_content_multilingual_settings_changed() {
  if (!function_exists('language_negotiation_info')) {
    drupal_language_initialize();
  }
  $info = language_negotiation_info();
  $enabled_providers = variable_get("language_negotiation_language", array());

  if (count($enabled_providers) <= 1) {
    $enabled_providers[LANGUAGE_NEGOTIATION_DEFAULT] = $info[LANGUAGE_NEGOTIATION_DEFAULT];
    $enabled_providers['locale-session'] = $info['locale-session'];

    // Add session switcher as a default if nothing else has been selected
    language_negotiation_set('language', $enabled_providers);
  }
}

